name: NanoPi-R2S RK3328 OpenWrt 19.07 Build For Lean

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/r2s_lean.yml'
      - 'config'
  schedule:
    - cron: '55 08  * * *'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialize Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk
          sudo docker image prune -a -f
          sudo apt-get -y install upx-ucl
          sudo apt-get -y purge dotnet* ghc* google* llvm* mysql* php* zulu* firefox hhvm
          sudo apt-get -y autoremove --purge          
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash

      - name: Install Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/

      - name: Download Source
        run: |
          rm -rf friendlywrt-rk3328
          mkdir friendlywrt-rk3328
          cd friendlywrt-rk3328
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v19.07.1 -m rk3328.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
          repo sync -c --no-clone-bundle -j8

      - name: Merge LEDE
        run: |
          cd friendlywrt-rk3328
          git clone https://github.com/coolsnowwolf/lede
          cd friendlywrt
          cp -r ../lede/package/lean package/
          sed -i 's/^src-git luci.*/src-git luci https:\/\/github.com\/coolsnowwolf\/luci/' feeds.conf.default
          sed -i 's/^src-git packages.*/src-git packages https:\/\/github.com\/coolsnowwolf\/packages/' feeds.conf.default

      - name: Install OpenClash
        run: |
          git clone https://github.com/vernesong/OpenClash.git tmp
          mv tmp/luci-app-openclash friendlywrt-rk3328/friendlywrt/package
          rm -rf tmp

      - name: Install Clash Binaries
        run: |
          mkdir -p friendlywrt-rk3328/friendlywrt/package/base-files/files/etc/openclash
          cd friendlywrt-rk3328/friendlywrt/package/base-files/files/etc/openclash
          wget https://github.com/vernesong/OpenClash/releases/download/Clash/clash-linux-armv8.tar.gz
          tar -vxzf clash-linux-armv8.tar.gz
          chmod +x clash
          rm -rf clash-linux-armv8.tar.gz

      - name: Install AdGuard Home
        run: |
          cd friendlywrt-rk3328/friendlywrt/package
          git clone https://github.com/rufengsuixing/luci-app-adguardhome.git

      - name: Install Serverchan
        run: |
          cd friendlywrt-rk3328/friendlywrt/package
          git clone https://github.com/tty228/luci-app-serverchan.git

      - name: Upgrade argon theme
        run: |
          cd friendlywrt-rk3328/friendlywrt/package
          rm -rf lean/luci-theme-argon
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git

      - name: Update Target.mk
        run: |
          cd friendlywrt-rk3328/friendlywrt/include
          sed -i 's/dnsmasq /dnsmasq-full default-settings luci /' target.mk

      - name: Update Feeds
        run: |
          cd friendlywrt-rk3328/friendlywrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Install Mods
        run: |
          cd friendlywrt-rk3328
          
          #cp ../patches/31-usb_wifi friendlywrt/package/base-files/files/etc/hotplug.d/usb/31-usb_wifi

          rm -rf friendlywrt/package/network/config/firewall
          cp -r lede/package/network/config/firewall friendlywrt/package/network/config/
          sed -i '/CONFIG_NETFILTER_XT_TARGET_HMARK/i\CONFIG_NETFILTER_XT_TARGET_FULLCONENAT=m' kernel/arch/arm64/configs/nanopi-r2_linux_defconfig
          sed -i '/CONFIG_NETFILTER_XT_TARGET_IDLETIMER/a\obj-$(CONFIG_NETFILTER_XT_TARGET_FULLCONENAT) += xt_FULLCONENAT.o' kernel/net/netfilter/Makefile
          cp ../xt_FULLCONENAT/xt_FULLCONENAT.c kernel/net/netfilter/xt_FULLCONENAT.c
          cp ../xt_FULLCONENAT/ipv4-netfilter.Kconfig kernel/net/ipv4/netfilter/Kconfig
          cp ../xt_FULLCONENAT/netfilter.Kconfig kernel/net/netfilter/Kconfig

          #git clone https://github.com/openwrt/openwrt
          #rm -rf friendlywrt/package/libs
          #cp -r openwrt/package/libs friendlywrt/package/
          
          sed -i '/CONFIG_IB/d;/CONFIG_SDK/d;/CONFIG_BUILDBOT/d;/CONFIG_ALL_KMODS/d;/CONFIG_ALL_NONSHARED/d' configs/config_rk3328
          sed -i '/docker/Id;/CONFIG_DISPLAY_SUPPORT/d;/CONFIG_AUDIO_SUPPORT/d' configs/config_rk3328

          sed -i '/Load Average/i\\t\t<tr><td width="33%"><%:CPU Temperature%></td><td><%=luci.sys.exec("cut -c1-2 /sys/class/thermal/thermal_zone0/temp")%></td></tr>' friendlywrt/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/index.htm
          sed -i 's/pcdata(boardinfo.system or "?")/"ARMv8"/' friendlywrt/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/index.htm
          sed -i "/redirect_https/d" friendlywrt/package/network/services/uhttpd/files/uhttpd.config
          sed -i 's/option fullcone\t1/option fullcone\t\t0/' friendlywrt/package/network/config/firewall/files/firewall.config
          sed -i "s/flow_offloading '1'/flow_offloading '0'/" friendlywrt/package/lean/luci-app-flowoffload/root/etc/config/flowoffload

      - name: Custom Configure Files
        run: |
          rm -f friendlywrt-rk3328/friendlywrt/.config*
          cp config friendlywrt-rk3328/friendlywrt/.config

      - name: Setting Defaults
        run: |
          cd friendlywrt-rk3328/friendlywrt
          sed -i '/uci commit luci/i\uci set luci.main.mediaurlbase=/luci-static/argon' package/lean/default-settings/files/zzz-default-settings
          sed -i 's/192.168.2.1/192.168.50.1/g' package/base-files/files/bin/config_generate

      - name: Install UPX
        run: |
          ln -s /usr/bin/upx-ucl friendlywrt-rk3328/friendlywrt/staging_dir/host/bin/upx

      - name: Build OpenWrt
        run: |
          cd friendlywrt-rk3328
          sed -i 's/set -eu/set -u/' scripts/mk-friendlywrt.sh
          ./build.sh nanopi_r2s.mk

      - name: Zip Files
        id: zip_file
        run: |
          cd friendlywrt-rk3328/out
          release_tag="KeroroWrt-NanoPi-R2S-Lean-$(date -d "+8 hours" +%Y-%m-%d-%H%M%S)"
          img_file_name="${release_tag}-arm64-sd.img"
          find . -name "FriendlyWrt_*img*" | xargs -I {} mv {} $img_file_name
          zip -r "${img_file_name}.zip" $img_file_name
          echo "##[set-output name=release_tag;]$release_tag"

      - name: Save config.lite
        run: |
          cd friendlywrt-rk3328/friendlywrt
          ./scripts/diffconfig.sh > ../out/config.lite

      - name: Assemble Artifact
        id: assemble_artifact
        env:
          release_tag: ${{ steps.zip_file.outputs.release_tag }}
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find friendlywrt-rk3328/out/ -name "KeroroWrt-*img.zip*" | xargs -i mv -f {} "./artifact/${release_tag}-arm64-sd.img.zip"
          cp friendlywrt-rk3328/friendlywrt/.config ./artifact/
          cp friendlywrt-rk3328/out/config.lite ./artifact/
          zip -r artifact.zip ./artifact/

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ steps.zip_file.outputs.release_tag }}
          path: ./artifact/

#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ steps.zip_file.outputs.release_tag }}
#          release_name: 自动发布 ${{ steps.zip_file.outputs.release_tag }}
#          draft: false
#          prerelease: false
#
#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#          asset_path: ./artifact.zip
#          asset_name: ${{ steps.zip_file.outputs.release_tag }}-ROM.zip
#          asset_content_type: application/zip
